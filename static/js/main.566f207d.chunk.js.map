{"version":3,"sources":["notes/do.wav","notes/re.wav","notes/mi.wav","notes/fa.wav","notes/sol.wav","notes/la.wav","notes/si.wav","App.js","index.js"],"names":["App","notas","nombre","link","require","sostenido","useState","sonando","setSonando","setTimeout","className","map","nota","onClick","Audio","default","play","handleClickNote","Math","random","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4JAAA,OAAe,cAA0B,gC,6BCAzC,OAAe,cAA0B,gC,6BCAzC,OAAe,cAA0B,gC,6BCAzC,OAAe,cAA0B,gC,6BCAzC,OAAe,cAA0B,iC,6BCAzC,OAAe,cAA0B,gC,6BCAzC,OAAe,cAA0B,gC,qGCgH1BA,MA1Gf,WAEE,IAAMC,EAAQ,CACZ,CACEC,OAAQ,KACRC,KAAMC,EAAQ,IACdC,WAAW,GAEb,CACEH,OAAQ,KACRC,KAAMC,EAAQ,IACdC,WAAW,GAEb,CACEH,OAAQ,KACRC,KAAMC,EAAQ,KAEhB,CACEF,OAAQ,KACRC,KAAMC,EAAQ,IACdC,WAAW,GAEb,CACEH,OAAQ,MACRC,KAAMC,EAAQ,IACdC,WAAW,GAEb,CACEH,OAAQ,KACRC,KAAMC,EAAQ,IACdC,WAAW,GAEb,CACEH,OAAQ,KACRC,KAAMC,EAAQ,MAelB,EAA2BE,mBAAS,GAApC,mBACA,GADA,UAC8BA,mBAAS,KAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAPAC,YAAW,WACTD,EAAW,MACX,KAMA,gCACE,sBAAKE,UAAW,SAAhB,UACE,iDACA,6DACA,oBAAIA,UAAY,eAAhB,SAAgCH,OAGlC,qBAAKG,UAAW,YAAhB,SAEGT,EAAMU,KAAI,SAAAC,GAAI,OACd,qBAEAF,UAAS,eAAYH,IAAYK,EAAKV,QAAU,WAC/CW,QAAW,kBAzCK,SAAAD,GACtBJ,EAAWI,EAAKV,QACD,IAAIY,MAAMF,EAAKT,KAAKY,SAC5BC,OAsCeC,CAAgBL,IAHjC,SAKGA,EAAKP,WAAa,qBAAKK,UAAW,WAJhB,IAAhBQ,KAAKC,mBC7EnBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.566f207d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/do.a2508143.wav\";","export default __webpack_public_path__ + \"static/media/re.419c7811.wav\";","export default __webpack_public_path__ + \"static/media/mi.51e5702c.wav\";","export default __webpack_public_path__ + \"static/media/fa.fdf4ed24.wav\";","export default __webpack_public_path__ + \"static/media/sol.e5e79dda.wav\";","export default __webpack_public_path__ + \"static/media/la.5351f634.wav\";","export default __webpack_public_path__ + \"static/media/si.42883966.wav\";","\nimport {useState} from \"react\";\nimport './App.sass';\n\n\n\nfunction App() {\n //AquÃ­ comienzan las sentencias js\n  const notas = [\n    {\n      nombre: \"Do\",\n      link: require(\"./notes/do.wav\"), //archivos wav son archivos de sonido/require se utiliza para llamar a una ruta de audio o video\n      sostenido: true //tecla negra\n    },\n    {\n      nombre: \"Re\",\n      link: require(\"./notes/re.wav\"),\n      sostenido: true\n    },\n    {\n      nombre: \"Mi\",\n      link: require(\"./notes/mi.wav\"),\n    },\n    {\n      nombre: \"Fa\",\n      link: require(\"./notes/fa.wav\"),\n      sostenido: true\n    },\n    {\n      nombre: \"Sol\",\n      link: require(\"./notes/sol.wav\"),\n      sostenido: true\n    },\n    {\n      nombre: \"La\",\n      link: require(\"./notes/la.wav\"),\n      sostenido: true\n    },\n    {\n      nombre: \"Si\",\n      link: require(\"./notes/si.wav\"),\n    },\n  ]\n\n  const handleClickNote = nota =>{\n    setSonando(nota.nombre);\n    const sonido = new Audio(nota.link.default); //notas en posiciÃ³n 0 retorna un link distinto a wav y lo desenvuelvo hasta el default para que me devuelva la ruta limpia que utilizarÃ¡ para el sonido\n    sonido.play()\n  }\n\n\n  //Hook useState necesita:\n  //-Variable inicial:     [click,\n  //-Una FunciÃ³n que se dedique a actualizar esa variable:    ,setClick]\n  //-El Valor inicial de dicha variable: dentro de los parÃ©ntesis () del useState\n  const [click, setClick ] = useState(0);\n  const [sonando, setSonando] = useState(\"\");  \n\n  /* let click = 0; */\n\n  const handlerClickCount = () =>{\n    setClick(click + 1);\n  }\n  \n  setTimeout(() =>{\n    setSonando(\"\")\n  },300)\n\n\n  \n  //AquÃ­ comienzan las expresiones\n  return (\n    <div>\n      <div className= \"titulo\">\n        <h1>Piano con React</h1>\n        <h2>Hecho por Kari ðŸŽˆ</h2>\n        <h3 className = \"esta-sonando\">{sonando}</h3>\n        {/* <button onClick = {handlerClickCount}>Has dado {click} clicks</button> */}\n      </div>\n      <div className= \"container\">\n\n        {notas.map(nota => (\n         <div\n         key={Math.random() * 100} \n         className = {`nota ${sonando === nota.nombre && \"sonando\"}`}\n          onClick = {() =>handleClickNote(nota)}\n          >\n           {nota.sostenido && <div className= \"negra\"></div>} \n         </div> \n        ))}\n        {/* <div className= \"nota\" onClick={handleClickNote}>\n          <div className= \"negra\"></div>\n        </div>\n        <div className= \"nota\">\n          <div className= \"negra\"></div>\n        </div>\n        <div className= \"nota\"></div>\n        <div className= \"nota\">\n          <div className= \"negra\"></div>\n        </div>\n        <div className= \"nota\">\n          <div className= \"negra\"></div>\n        </div>\n        <div className= \"nota\">\n          <div className= \"negra\"></div>\n        </div>\n        <div className= \"nota\"></div> */}\n      </div>   \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}